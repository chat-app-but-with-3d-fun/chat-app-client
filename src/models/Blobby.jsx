/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: robertramsay (https://sketchfab.com/robertramsay)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/models/b0cca661df254ba28015b64046e0010d
title: Alien Blobby
*/

import React, { useRef, Suspense, useEffect } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'

export default function Blobby({ ...props }) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/blobby/scene-transformed.glb')
  const { actions } = useAnimations(animations, group)

  useEffect(() => {
    actions[Object.keys(actions)[0]].play()
    setTimeout(() => {
      actions[Object.keys(actions)[0]].stop();
    }, 3000);
  }, []);
  
  return (
    <Suspense fallback={null}>
      <group ref={group} {...props} dispose={null}>
            <group rotation={[-Math.PI / 2, 0, 0]}>
              <group position={[0, 2.89, -172.54]} rotation={[-Math.PI, 0, 0]}>
                <group rotation={[-Math.PI, 0, 0]}>
                  <group position={[0, 3.36, 64.08]}>
                    <primitive object={nodes._rootJoint} scale={0.20}/>
                    <skinnedMesh
                      geometry={nodes.Alien_Alien_0.geometry}
                      material={materials.Alien}
                      skeleton={nodes.Alien_Alien_0.skeleton}
                      onClick={(e) => {
                        actions[Object.keys(actions)[0]].play();
                        setTimeout(() => {
                          actions[Object.keys(actions)[0]].stop();
                        }, 3000);
                      }}
                    />
                  </group>
                </group>
              </group>
            </group>
        </group>

    </Suspense>
    
  )
}

useGLTF.preload('/blobby/scene-transformed.glb')
